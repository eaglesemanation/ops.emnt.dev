name: "Build containers and push to GHCR"

on:
  workflow_call:
    inputs:
      image_list:
        type: string
  workflow_dispatch:
    inputs:
      image_list:
        description: "Array of paths to containers that need to be rebuilt, as JSON"
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  build_changed_images:
    name: "Build image: ${{ matrix.image }}"
    runs-on: ubuntu-latest
    if: ${{ inputs.image_list != '[]' }}
    strategy:
      matrix:
        image: ${{ fromJson( inputs.image_list ) }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Extract image info
        id: info
        run: |
          echo "Extracted info:" >> "${GITHUB_STEP_SUMMARY}"
          IMAGE_PATH="${{ matrix.image }}"
          IMAGE_FILENAME="${IMAGE_PATH##*/}"
          IMAGE_NAME="${IMAGE_FILENAME%.Dockerfile}"
          if [ "${IMAGE_FILENAME}" -eq "${IMAGE_NAME}" ]; then
            echo "\`${IMAGE_PATH}\` does not end with .Dockerfile"
            exit 1
          fi
          echo "- Image name \`${IMAGE_NAME}\`" >> "${GITHUB_STEP_SUMMARY}"
          BASE_TAG="$(cat "${IMAGE_PATH}" | gawk 'match($0, /^ARG RELEASE_TAG=([^ ]+)/, a) {print a[1]; exit;}')"
          if [ -z "${BASE_TAG}" ]; then
            BASE_TAG="$(cat "${IMAGE_PATH}" | gawk 'match($0, /^FROM [^ ]+:([^ ]+)/, a) {print a[1]; exit;}')"
            if [ -z "${BASE_TAG}" ]; then
              echo "Base tag is not found or not specified"
              exit 1
            fi
          fi
          IMAGE_TAG="${BASE_TAG}_b${{ github.run_number }}-${{ github.run_attempt }}"
          echo "- New image tag \`${IMAGE_TAG}\`" >> "${GITHUB_STEP_SUMMARY}"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> "${GITHUB_OUTPUT}"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> "${GITHUB_OUTPUT}"
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ steps.info.outputs.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.info.outputs.IMAGE_TAG }}
          labels: |
            org.opencontainers.image.title=${{ steps.info.outputs.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./containers
          file: "${{ matrix.image }}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
