apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: intel-xpumanager
  labels:
    app.kubernetes.io/name: intel-xpumanager
    app.kubernetes.io/instance: intel-xpumanager
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: intel-xpumanager
      app.kubernetes.io/instance: intel-xpumanager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: intel-xpumanager
        app.kubernetes.io/instance: intel-xpumanager
    spec:
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
      containers:
        - name: xpumd
          image: intel/xpumanager
          imagePullPolicy: IfNotPresent
          command: ["/usr/bin/xpumd"]
          env:
            - name: SPDLOG_LEVEL
              value: info
            - name: XPUM_REST_NO_TLS
              value: "1"
            - name: XPUM_EXPORTER_NO_AUTH
              value: "1"
            - name: XPUM_EXPORTER_ONLY
              value: "1"
            - name: XPUM_METRICS
              value: 0-38
          resources:
            limits:
              gpu.intel.com/i915_monitoring: 1
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
              add:
                - PERFMON
          volumeMounts:
            # for getting pod resources
            - mountPath: /var/lib/kubelet/pod-resources
              name: kubeletpodres
              # for PCIe read/write data collection
            - mountPath: /pcm/sys/firmware/acpi/tables/MCFG:ro
              name: mcfg
            - name: sockdir
              mountPath: /tmp
        - name: python-exporter
          # - socket location for "xpumd" communication
          # - GPU device file names for "dev_file" label
          volumeMounts:
            - name: sockdir
              mountPath: /tmp
            - name: devdri
              mountPath: /dev/dri
              readOnly: true
          imagePullPolicy: IfNotPresent
          image: intel/xpumanager
          # needs same user as "xpumd" to be able to access its socket
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          env:
            # Disable need for running rest_config.py first to generate passwords
            # (otherwise XPUM constantly logs not finding rest.conf & does not work)
            # Other alternative would be to provide pre-generated rest.conf configMap
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: XPUM_EXPORTER_NO_AUTH
              value: "1"
            # Run only Prometheus exporter, not rest XPUM
            - name: XPUM_EXPORTER_ONLY
              value: "1"
              # Override which metrics are exported
              #- name: XPUM_METRICS
              #  value: 0-29
          # so that Gunicorn finds the Python files
          workingDir: /usr/lib/xpum/rest
          # There should be only single outstanding Prometheus request
          # being handled at the time + manual debugging calls as this
          # is cluster internal, so it does not need to scale as much
          # as Gunicorn defaults do.  For all settings, see:
          #   https://docs.gunicorn.org/en/stable/settings.html
          command: ["gunicorn", "--bind", "0.0.0.0:29999", "--worker-connections", "64", "--worker-class", "gthread", "--workers", "1", "--threads", "4", "xpum_rest_main:main()"]
          # Prometheus metrics endpoint
          ports:
            - containerPort: 29999
              name: metrics
              protocol: TCP
          startupProbe:
            httpGet:
              path: /metrics
              port: metrics
            failureThreshold: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healtz
              port: metrics
            initialDelaySeconds: 60
            periodSeconds: 10
      volumes:
        - name: kubeletpodres
          hostPath:
            path: /var/lib/kubelet/pod-resources
        - name: mcfg
          hostPath:
            path: /sys/firmware/acpi/tables/MCFG
        - name: sockdir
          emptyDir: {}
        - name: devdri
          hostPath:
            path: /dev/dri
