# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: crossplane-minio-creds-template
  namespace: local-backup-s3
spec:
  secretStoreRef:
    kind: SecretStore
    name: local-backup-s3-secrets
  target:
    name: crossplane-minio-creds
    template:
      engineVersion: v2
      data:
        credentials: |-
          {
            "user": "{{.accessKey}}",
            "password": "{{.secretKey}}"
          }
  dataFrom:
    - extract:
        key: minio-root-creds
---
apiVersion: minio.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  name: local-backup-s3
spec:
  credentials:
    secretRef:
      key: credentials
      name: crossplane-minio-creds
      namespace: local-backup-s3
    source: Secret
  server: backup-s3.${CLUSTER_DOMAIN}:443
  ssl: true
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: crossplane-b2-creds-template
  namespace: local-backup-s3
spec:
  secretStoreRef:
    kind: SecretStore
    name: local-backup-s3-secrets
  target:
    name: crossplane-b2-creds
    template:
      engineVersion: v2
      data:
        credentials: |-
          {
            "application_key_id": "{{.accessKey}}",
            "application_key": "{{.secretKey}}"
          }
  dataFrom:
    - extract:
        key: b2-crossplane-creds
---
apiVersion: b2.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  name: b2
spec:
  credentials:
    secretRef:
      key: credentials
      name: crossplane-b2-creds
      namespace: local-backup-s3
    source: Secret
---
apiVersion: kubernetes.crossplane.io/v1alpha1
kind: ProviderConfig
metadata:
  name: default
spec:
  credentials:
    source: InjectedIdentity
