apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xbackupbuckets.crossplane.emnt.dev
spec:
  group: crossplane.emnt.dev
  names:
    kind: XBackupBucket
    plural: xbackupbuckets
  claimNames:
    kind: BackupBucket
    plural: backupbuckets
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                mirrorSchedule:
                  type: string
                  default: "0 0 * * *"
            status:
              type: object
              properties: {}
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: backupbuckets.crossplane.emnt.dev
spec:
  compositeTypeRef:
    apiVersion: crossplane.emnt.dev/v1alpha1
    kind: XBackupBucket
  mode: Pipeline
  pipeline:
    - functionRef:
        name: function-patch-and-transform
      step: patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - name: local-bucket
            base:
              apiVersion: s3.minio.crossplane.io/v1alpha1
              kind: Bucket
              spec:
                forProvider: {}
                providerConfigRef:
                  name: local-backup-s3
            patches:
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: metadata.name
                type: FromCompositeFieldPath
          - name: local-user
            base:
              apiVersion: iam.minio.crossplane.io/v1alpha1
              kind: User
              spec:
                forProvider: {}
                providerConfigRef:
                  name: local-backup-s3
            patches:
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: metadata.name
                type: FromCompositeFieldPath
          - name: local-user-key
            base:
              apiVersion: minio.crossplane.io/v1alpha1
              kind: AccessKey
              spec:
                forProvider:
                  userSelector:
                    matchControllerRef: true
                providerConfigRef:
                  name: local-backup-s3
                writeConnectionSecretToRef:
                  name: local-backup-s3-key
            patches:
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: spec.writeConnectionSecretToRef.namespace
                type: FromCompositeFieldPath
          - name: local-policy
            base:
              apiVersion: iam.minio.crossplane.io/v1alpha1
              kind: Policy
              spec:
                forProvider:
                  policy: ""
                providerConfigRef:
                  name: local-backup-s3
            patches:
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: spec.forProvider.policy
                transforms:
                  - type: string
                    string:
                      type: Format
                      fmt: |-
                        {
                          "Version": "2012-10-17",
                          "Statement": [
                            {
                              "Effect": "Allow",
                              "Action": [
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:GetObjectTagging",
                                "s3:GetObjectVersionTagging",
                                "s3:PutObject",
                                "s3:PutObjectTagging",
                                "s3:PutObjectVersionTagging",
                                "s3:DeleteObject",
                                "s3:DeleteObjectVersion",
                                "s3:DeleteObjectTagging",
                                "s3:DeleteObjectVersionTagging"
                              ],
                              "Resource": "arn:aws:s3:::%[1]s/*"
                            },
                            {
                              "Effect": "Allow",
                              "Action": [
                                "s3:ListBucket",
                                "s3:ListBucketVersions",
                                "s3:GetBucketLocation"
                              ],
                              "Resource": "arn:aws:s3:::%[1]s"
                            }
                          ]
                        }
                type: FromCompositeFieldPath
          - name: local-policy-attachment
            base:
              apiVersion: iam.minio.crossplane.io/v1alpha1
              kind: UserPolicyAttachment
              spec:
                forProvider:
                  policySelector:
                    matchControllerRef: true
                  userSelector:
                    matchControllerRef: true
                providerConfigRef:
                  name: local-backup-s3
            patches:
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: metadata.name
                type: FromCompositeFieldPath
          - name: b2-bucket
            base:
              apiVersion: b2.crossplane.io/v1alpha1
              kind: Bucket
              spec:
                forProvider:
                  bucketType: allPrivate
                  defaultServerSideEncryption:
                    - algorithm: AES256
                      mode: SSE-B2
                providerConfigRef:
                  name: b2
            patches:
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: spec.forProvider.bucketName
                transforms:
                  - type: string
                    string:
                      type: Format
                      fmt: emnt-dev-%s
                type: FromCompositeFieldPath
          - name: b2-application-key
            base:
              apiVersion: b2.crossplane.io/v1alpha1
              kind: ApplicationKey
              spec:
                forProvider:
                  bucketSelector:
                    matchControllerRef: true
                  capabilities:
                    - listFiles
                    - readFiles
                    - writeFiles
                    - deleteFiles
                providerConfigRef:
                  name: b2
                writeConnectionSecretToRef:
                  name: backblaze-b2-key
            patches:
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: spec.forProvider.keyName
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: spec.writeConnectionSecretToRef.namespace
                type: FromCompositeFieldPath
          - name: b2-replication-cronjob
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                forProvider:
                  manifest:
                    apiVersion: batch/v1
                    kind: CronJob
                    metadata:
                      name: local-to-b2-backup-mirror
                    spec:
                      concurrencyPolicy: Forbid
                      successfulJobsHistoryLimit: 3
                      failedJobsHistoryLimit: 3
                      jobTemplate:
                        spec:
                          template:
                            spec:
                              restartPolicy: OnFailure
                              containers:
                                - name: mc-mirror
                                  image: minio/mc:latest
                                  command:
                                    - /bin/sh
                                    - -c
                                    - |
                                      set -e
                                      mc alias set local https://backup-s3.${CLUSTER_DOMAIN} $LOCAL_ACCESS_KEY $LOCAL_SECRET_KEY
                                      mc alias set remote https://s3.us-east-005.backblazeb2.com $REMOTE_ACCESS_KEY $REMOTE_SECRET_KEY
                                      mc mirror --remove --overwrite local/$BUCKET_NAME remote/emnt-dev-$BUCKET_NAME
                                  env:
                                    - name: BUCKET_NAME
                                      value: ""
                                    - name: LOCAL_ACCESS_KEY
                                      valueFrom:
                                        secretKeyRef:
                                          name: local-backup-s3-key
                                          key: access_key
                                    - name: LOCAL_SECRET_KEY
                                      valueFrom:
                                        secretKeyRef:
                                          name: local-backup-s3-key
                                          key: secret_key
                                    - name: REMOTE_ACCESS_KEY
                                      valueFrom:
                                        secretKeyRef:
                                          name: backblaze-b2-key
                                          key: application_key_id
                                    - name: REMOTE_SECRET_KEY
                                      valueFrom:
                                        secretKeyRef:
                                          name: backblaze-b2-key
                                          key: application_key
            patches:
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: metadata.name
                type: FromCompositeFieldPath
                transforms:
                  - type: string
                    string:
                      type: Format
                      fmt: "%s-backup-mirror-cronjob"
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: spec.forProvider.manifest.metadata.namespace
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: spec.forProvider.manifest.spec.jobTemplate.spec.template.spec.containers[0].env[0].value
                type: FromCompositeFieldPath
              - fromFieldPath: spec.mirrorSchedule
                toFieldPath: spec.forProvider.manifest.spec.schedule
                type: FromCompositeFieldPath
