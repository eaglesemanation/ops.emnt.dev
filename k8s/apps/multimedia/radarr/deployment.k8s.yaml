apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: radarr
  labels:
    app.kubernetes.io/name: radarr
    app.kubernetes.io/instance: radarr
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: radarr
      app.kubernetes.io/instance: radarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: radarr
        app.kubernetes.io/instance: radarr
    spec:
      securityContext:
        fsGroup: 1000
        runAsNonRoot: false # FIXME: Linuxserver images require root for init
      containers:
        - name: radarr
          image: docker.io/linuxserver/radarr:5.15.1
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              memory: 1Gi
          securityContext:
            readOnlyRootFilesystem: false # FIXME: Linuxserver images require writable root fs
          startupProbe:
            httpGet:
              path: /ping
              port: http
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Etc/UTC"
          volumeMounts:
            - name: multimedia
              mountPath: /multimedia
            - name: data
              mountPath: /config
            - name: config
              mountPath: /config/config.xml
              subPath: config.xml
          ports:
            - name: http
              containerPort: 7878
      volumes:
        - name: multimedia
          persistentVolumeClaim:
            claimName: multimedia
        - name: data
          persistentVolumeClaim:
            claimName: radarr-config
        - name: config
          secret:
            secretName: config-radarr
