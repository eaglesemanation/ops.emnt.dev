apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/instance: jellyfin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/instance: jellyfin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: emnt.dev/on-nas
                    operator: Exists
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
      containers:
        - name: jellyfin
          image: docker.io/linuxserver/jellyfin:10.8.9
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Etc/UTC"
            - name: JELLYFIN_PublishedServerUrl
              value: "jellyfin.emnt.dev"
          volumeMounts:
            - name: multimedia
              mountPath: /multimedia
            - name: jellyfin-config
              mountPath: /config
          ports:
            - name: http
              containerPort: 8096
            - name: auto-disc-1
              containerPort: 1900
              protocol: UDP
            - name: auto-disc-2
              containerPort: 7359
              protocol: UDP
      volumes:
        - name: multimedia
          persistentVolumeClaim:
            claimName: multimedia
        - name: jellyfin-config
          persistentVolumeClaim:
            claimName: jellyfin-config
