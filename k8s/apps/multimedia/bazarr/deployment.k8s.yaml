apiVersion: apps/v1
kind: Deployment
metadata:
  name: bazarr
  namespace: bazarr
  labels:
    app.kubernetes.io/name: bazarr
    app.kubernetes.io/instance: bazarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bazarr
      app.kubernetes.io/instance: bazarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bazarr
        app.kubernetes.io/instance: bazarr
    spec:
      securityContext:
        runAsNonRoot: false # FIXME: Linuxserver images require root for init
        fsGroup: 1000
      containers:
        - name: bazarr
          image: docker.io/linuxserver/bazarr:1.5.3
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
            limits:
              memory: 1Gi
          securityContext:
            readOnlyRootFilesystem: false # FIXME: Linuxserver images require writable root fs
          startupProbe:
            exec:
              command: ["/bin/sh", "/healthcheck.sh", "6767"]
          livenessProbe:
            exec:
              command: ["/bin/sh", "/healthcheck.sh", "6767"]
          readinessProbe:
            exec:
              command: ["/bin/sh", "/healthcheck.sh", "6767"]
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Etc/UTC"
            # https://gitlab.alpinelinux.org/alpine/aports/-/issues/14565
            # Mitigates "Permission denied" errors on startup
            - name: PGSSLCERT
              value: /pg-certs/ca.crt
            - name: POSTGRES_ENABLED
              value: "true"
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: bazarr-pg-app
                  key: host
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: bazarr-pg-app
                  key: port
            - name: POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name: bazarr-pg-app
                  key: dbname
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: bazarr-pg-app
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bazarr-pg-app
                  key: password
          volumeMounts:
            - name: multimedia
              mountPath: /multimedia
            - name: bazarr-config
              mountPath: /config
            - name: healthcheck
              subPath: healthcheck.sh
              mountPath: /healthcheck.sh
              readOnly: true
            - name: pg-certs
              mountPath: /pg-certs
              readOnly: true
          ports:
            - name: http
              containerPort: 6767
      volumes:
        - name: multimedia
          persistentVolumeClaim:
            claimName: multimedia
        - name: bazarr-config
          persistentVolumeClaim:
            claimName: bazarr-config
        - name: healthcheck
          configMap:
            name: bazarr-healthcheck
        - name: pg-certs
          secret:
            secretName: bazarr-pg-ca
