#
# Refs:
# https://github.com/jesec/rtorrent/blob/master/doc/rtorrent.rc
# https://rtorrent-docs.readthedocs.io/en/latest/cookbook.html
# https://wiki.archlinux.org/title/RTorrent
#

## Define directories
method.insert = cfg.basedir,  private|const|string, (cat, "/data/")
method.insert = cfg.session,  private|const|string, (cat, (cfg.basedir), "session/")
method.insert = cfg.socket,   private|const|string, (cat, (cfg.basedir), "sock/")
method.insert = cfg.download, private|const|string, (cat, "/multimedia/downloads/")

# multimedia is already mounted, create downloads folder
fs.mkdir = (cat, (cfg.download))

## Set default paths
system.cwd.set        = (directory.default)
directory.default.set = (cat, (cfg.download))
session.path.set      = (cat, (cfg.session))

## Set last started time
method.insert = system.startup_time, value|const, (system.time)

## Set the path to an items data, and the path to its session file.
method.insert = d.data_path, simple,"if=(d.is_multi_file),(cat, (d.directory), /),(cat, (d.directory), /, (d.name))"
method.insert = d.session_file, simple, "cat=(session.path), (d.hash), .torrent"

### begin: Handle magnet links specail way ###
# Start any magnet torrent from the "load" watch directory (that only loads downloads into rtorrent)
method.set_key = event.download.inserted_new, auto_start_meta_in_load_dir, "branch=\"and={d.is_meta=,not=$d.state=}\",d.start="

# helper method: compose the full path of the wrong meta file in "incomplete" dir
method.insert = d.get_wrong_magnet_meta_file_path,   simple|private, "cat=$cfg.download=,$d.hash=,.meta"
# helper method: compose the full path of the right torrent file in ".session" dir
method.insert = d.get_session_magnet_meta_file_path, simple|private, "cat=$cfg.session=,$d.hash=,.torrent"
# helper method: compose the new full path of the right torrent file in watch dir
method.insert = d.get_new_magnet_meta_file_path,     simple|private, "cat=$cfg.download=,$d.name=,-,$d.hash=,.torrent"
# helper method: delete wrong meta file from "incomplete dir"
method.insert = d.delete_wrong_magnet_meta_file,     simple|private, "execute.nothrow={rm,-rf,--,$d.get_wrong_magnet_meta_file_path=}"
# helper method: copy the right torrent file from ".session" dir into watch dir
method.insert = d.copy_session_magnet_meta_file,     simple|private, "execute.nothrow={cp,--,$d.get_session_magnet_meta_file_path=,$d.get_new_magnet_meta_file_path=}"
# helper method: copies right one into its proper place, sets d.tied_to_file property to it, deletes the wrong one, saves session
method.insert = d.fix_magnet_tied_file, simple|private, "d.copy_session_magnet_meta_file=; d.tied_to_file.set=$d.get_new_magnet_meta_file_path=; d.delete_wrong_magnet_meta_file=; d.save_full_session="
# helper method: checks existence of a directory, file, symlink
method.insert = check_object.value, simple|private, "execute.capture=bash,-c,\"$cat=\\\"test -\\\",$argument.2=,\\\" \\\\\\\"\\\",$argument.0=,$argument.1=,\\\"\\\\\\\" && echo -n 1 || echo -n\\\"\""

# Fix tied torrent file of an initially magnet link when its download has been just started: delete the wrong one from "incomplete" dir and copy the right one from ".session" dir if they exist
method.set_key = event.download.inserted_new, fix_magnet_tied_file, "branch=\"and={\\\"check_object.value=$cat=$d.get_session_magnet_meta_file_path=,,f\\\",\\\"check_object.value=$cat=$d.get_wrong_magnet_meta_file_path=,,f\\\"}\",d.fix_magnet_tied_file="
### end: Handle magnet links specail way ###

## Configuration
pieces.memory.max.set              = 1024M
throttle.max_uploads.set           = 100
throttle.max_uploads.global.set    = 250
throttle.min_peers.normal.set      = 20
throttle.max_peers.normal.set      = 60
throttle.min_peers.seed.set        = 30
throttle.max_peers.seed.set        = 80
trackers.numwant.set               = 80
protocol.encryption.set            = allow_incoming,try_outgoing,enable_retry
network.http.max_open.set          = 50
network.http.dns_cache_timeout.set = 25
network.max_open_files.set         = 600
network.max_open_sockets.set       = 300
network.xmlrpc.size_limit.set      = 4M

## Setting up as a daemon for Flood UI
network.scgi.open_local = (cat, (cfg.socket), "rtorrent.sock")
network.port_range.set  = ${RTORRENT_PORT}-${RTORRENT_PORT}
session.use_lock.set    = no
system.daemon.set       = true
system.umask.set        = 0002
encoding.add            = utf8

# Set up DHT
dht.mode.set         = auto
dht.port.set         = 6881
protocol.pex.set     = yes
trackers.use_udp.set = yes

# Add bootstraping nodes
schedule2 = dht_node_1, 5, 0, "dht.add_node=router.utorrent.com:6881"
schedule2 = dht_node_2, 5, 0, "dht.add_node=dht.transmissionbt.com:6881"
schedule2 = dht_node_3, 5, 0, "dht.add_node=router.bitcomet.com:6881"
schedule2 = dht_node_4, 5, 0, "dht.add_node=dht.aelitis.com:6881"

## Log all messages to stdout
method.insert  = cfg.logfile,  private|const|string, (cat, "/dev/stdout")
log.open_file  = "log", (cfg.logfile)
log.add_output = "info", "log"
log.add_output = "warn", "log"
log.add_output = "critical", "log"
log.add_output = "torrent_info", "log"
