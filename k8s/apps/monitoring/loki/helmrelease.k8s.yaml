# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: loki
  namespace: loki
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
spec:
  interval: 2h
  timeout: 30m
  chart:
    spec:
      chart: loki
      version: 5.41.8
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      interval: 30m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    loki:
      # TODO: Enable when ingress supports service auth, not just user auth
      auth_enabled: false
      limits_config:
        retention_period: 744h # 31 days
      compactor:
        working_directory: /var/loki/compactor
        shared_store: s3
        retention_enabled: true
        compaction_interval: 10m
        retention_delete_delay: 2h
      storage:
        s3:
          s3: https://minio.loki.svc.cluster.local.
          s3ForcePathStyle: true
          accessKeyId: ${S3_LOKI_ACCESS_KEY_ID}
          secretAccessKey: ${S3_LOKI_SECRET_ACCESS_KEY}
          http_config:
            insecure_skip_verify: true
    # NOTE: Currently separating access keys into secret is a mess.
    # Keep track of https://github.com/grafana/loki/issues/8572
    backend:
      resources:
        requests:
          cpu: 20m
          memory: 128Mi
        limits:
          memory: 512Mi
      persistence:
        storageClass: freenas-api-iscsi-csi
      extraArgs:
        - "-config.expand-env=true"
      extraEnv:
        - name: S3_LOKI_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: loki-minio
              key: CONSOLE_ACCESS_KEY
        - name: S3_LOKI_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: loki-minio
              key: CONSOLE_SECRET_KEY
    write:
      resources:
        requests:
          cpu: 20m
          memory: 256Mi
        limits:
          memory: 1Gi
      persistence:
        storageClass: freenas-api-iscsi-csi
        size: 20Gi
      extraArgs:
        - "-config.expand-env=true"
      extraEnv:
        - name: S3_LOKI_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: loki-minio
              key: CONSOLE_ACCESS_KEY
        - name: S3_LOKI_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: loki-minio
              key: CONSOLE_SECRET_KEY
    read:
      resources:
        requests:
          cpu: 20m
          memory: 128Mi
        limits:
          memory: 512Mi
      extraArgs:
        - "-config.expand-env=true"
      extraEnv:
        - name: S3_LOKI_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: loki-minio
              key: CONSOLE_ACCESS_KEY
        - name: S3_LOKI_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: loki-minio
              key: CONSOLE_SECRET_KEY
    monitoring:
      lokiCanary:
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
          limits:
            memory: 256Mi
      serviceMonitor:
        labels:
          release: prometheus
      selfMonitoring:
        # This is using Grafana Agent, while metrics are already being collected
        # by serviceMonitor, not sure why I would want to have both
        enabled: false
        grafanaAgent:
          installOperator: false
    test:
      # Depends on selfMonitoring
      enabled: false
    gateway:
      enabled: false
    ingress:
      enabled: true
      ingressClassName: ingress-internal-traefik
      hosts:
        - loki.emnt.dev
