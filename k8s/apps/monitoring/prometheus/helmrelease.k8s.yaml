# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus
  namespace: prometheus
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 65.2.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 30m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    # Makes object names less insanely long
    cleanPrometheusOperatorObjectNames: true
    # Anything longer prevents CSI from provisioning volumes
    fullnameOverride: prom
    defaultRules:
      rules:
        # Not used with Cilium
        kubeProxy: false
    kubeControllerManager:
      service:
        selector:
          k8s-app: kube-controller-manager
    kubeScheduler:
      service:
        selector:
          k8s-app: kube-scheduler
    kubeEtcd:
      endpoints:
        - ${K8S_CONTROLLER_1_ADDR}
    grafana:
      grafana.ini:
        server:
          root_url: https://grafana.${CLUSTER_DOMAIN}/
        auth.basic:
          enabled: "false"
        auth.generic_oauth:
          enabled: "true"
          auto_login: "true"
          name: authentik
          client_id: jQ9qSWQebjh5yzXdo1LwjtMDYCrtE63MtIM4wsD7
          scopes: openid profile email
          auth_url: https://authentik.${CLUSTER_DOMAIN}/application/o/authorize/
          token_url: https://authentik.${CLUSTER_DOMAIN}/application/o/token/
          api_url: https://authentik.${CLUSTER_DOMAIN}/application/o/userinfo/
          role_attribute_path: "contains(groups[*], 'authentik Admins') && 'Admin' || 'Viewer'"
        auth:
          signout_redirect_url: https://authentik.${CLUSTER_DOMAIN}/application/o/grafana/end-session/
          disable_signout_menu: "true"
      envFromSecrets:
        - name: grafana-oidc
      admin:
        existingSecret: grafana-creds
        userKey: username
        passwordKey: password
      additionalDataSources:
        - name: Loki
          type: loki
          access: proxy
          url: https://loki.${CLUSTER_DOMAIN}
          # TODO: Look into enabling Loki ruler component
          manageAlerts: false
          jsonData:
            maxLines: 1000
      defaultDashboardsTimezone: browser
      ingress:
        enabled: true
        ingressClassName: ingress-external-traefik
        hosts:
          - grafana.${CLUSTER_DOMAIN}
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          memory: 1Gi
    prometheusOperator:
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          memory: 128Mi
    kube-state-metrics:
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits:
          memory: 128Mi
    prometheus-node-exporter:
      tolerations:
        - key: emnt.dev/on-nas
          operator: Exists
          effect: NoSchedule
      resources:
        requests:
          cpu: 10m
          memory: 16Mi
        limits:
          memory: 64Mi
    prometheus:
      prometheusSpec:
        resources:
          requests:
            cpu: 200m
            memory: 3Gi
          limits:
            memory: 4Gi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: freenas-api-iscsi-csi
              accessModes:
                - "ReadWriteOnce"
              resources:
                requests:
                  storage: 50Gi
      ingress:
        enabled: false # Using traefik IngressRoute
    alertmanager:
      alertmanagerSpec:
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            memory: 128Mi
        alertmanagerConfiguration:
          name: alertmanager-global-config
