# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jitsi
  namespace: flux-system
spec:
  interval: 30m
  targetNamespace: jitsi
  chart:
    spec:
      chart: jitsi-meet
      version: 1.4.1
      sourceRef:
        kind: HelmRepository
        name: jitsi
        namespace: flux-system
      interval: 30m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    websockets:
      colibri:
        enabled: true
      xmpp:
        enabled: true
    publicURL: "https://jitsi.${CLUSTER_DOMAIN}/"
    enableAuth: true
    enableGuests: true
    tz: America/Toronto
    web:
      ingress:
        enabled: true
        ingressClassName: ingress-external-traefik
        hosts:
          - host: jitsi.${CLUSTER_DOMAIN}
            paths: ["/"]
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
    jvb:
      service:
        enabled: false
      publicIPs:
        - ${SVC_INGRESS_EXTERNAL_ADDR}
    prosody:
      env:
        AUTH_TYPE: ldap
        LDAP_AUTH_METHOD: bind
        LDAP_BASE: dc=jitsi-ldap,dc=goauthentik,dc=io
        # TODO: Verify certificate. Maybe figureout self-sign through cert-manager
        LDAP_TLS_CHECK_PEER: "0"
        LDAP_URL: ldap://ak-outpost-authentik-ldap-outpost.authentik.svc.cluster.local
        LDAP_FILTER: (&(cn=%u)(memberOf=CN=authentik Users,OU=groups,DC=jitsi-ldap,DC=goauthentik,DC=io))
        LDAP_BINDDN: cn=ak-service-ldap,ou=users,dc=jitsi-ldap,dc=goauthentik,dc=io
        LDAP_VERSION: "3"
      extraEnvs:
        - name: LDAP_BINDPW
          valueFrom:
            secretKeyRef:
              key: LDAP_BINDPW
              name: authentik-creds
      persistence:
        storageClassName: freenas-api-iscsi-csi
