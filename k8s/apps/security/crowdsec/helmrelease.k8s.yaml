# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: crowdsec
  namespace: flux-system
spec:
  interval: 30m
  targetNamespace: crowdsec
  chart:
    spec:
      chart: crowdsec
      version: 0.17.1
      sourceRef:
        kind: HelmRepository
        name: crowdsec
        namespace: flux-system
      interval: 30m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    image:
      # datasource=github-releases depName=crowdsecurity/crowdsec
      tag: "v1.6.5"
    config:
      config.yaml.local: |
        api:
          server:
            auto_registration: # Activate if not using TLS for authentication
              enabled: true
              token: "$${REGISTRATION_TOKEN}" # /!\ Do not modify this variable (auto-generated and handled by the chart)
              allowed_ranges: # /!\ Make sure to adapt to the pod IP ranges used by your cluster
                - "${POD_CIDR}"
        db_config:
          type: postgresql
          user: $${DB_USER}
          password: $${DB_PASSWORD}
          db_name: $${DB_NAME}
          host: $${DB_HOST}
          port: $${DB_PORT}
          sslmode: require
    lapi:
      env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: crowdsec-pg-pguser-crowdsec
              value: user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: crowdsec-pg-pguser-crowdsec
              value: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: crowdsec-pg-pguser-crowdsec
              value: dbname
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: crowdsec-pg-pguser-crowdsec
              value: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: crowdsec-pg-pguser-crowdsec
              value: port
      ingress:
        enabled: true
        ingressClassName: ingress-internal-traefik
        host: crowdsec.${CLUSTER_DOMAIN}
      persistentVolume:
        data:
          storageClassName: freenas-api-iscsi-csi
        config:
          storageClassName: freenas-api-iscsi-csi
      metrics:
        serviceMonitor:
          enabled: true
          additionalLabels:
            release: prometheus
    agent:
      metrics:
        serviceMonitor:
          enabled: true
          additionalLabels:
            release: prometheus
    appsec:
      enabled: true
      metrics:
        serviceMonitor:
          enabled: true
          additionalLabels:
            release: prometheus
