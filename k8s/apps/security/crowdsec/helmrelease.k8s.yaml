# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: crowdsec
  namespace: flux-system
spec:
  interval: 30m
  targetNamespace: crowdsec
  chart:
    spec:
      chart: crowdsec
      version: 0.19.3
      sourceRef:
        kind: HelmRepository
        name: crowdsec
        namespace: flux-system
      interval: 30m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    config:
      capi_whitelists.yaml: |
        name: eaglesemanation/mxtoolbox-whitelist
        description: "Whitelist events from MxToolBox monitors"
        whitelist:
          reason: "MxToolBox ip address"
          ip:
            - 44.194.168.193
            - 52.55.244.91
            - 18.205.72.90
            - 18.209.86.113
      config.yaml.local: |
        api:
          server:
            auto_registration: # Activate if not using TLS for authentication
              enabled: true
              token: "$${REGISTRATION_TOKEN}" # /!\ Do not modify this variable (auto-generated and handled by the chart)
              allowed_ranges: # /!\ Make sure to adapt to the pod IP ranges used by your cluster
                - "${POD_CIDR}"
        db_config:
          type: postgresql
          user: $${DB_USER}
          password: $${DB_PASSWORD}
          db_name: $${DB_NAME}
          host: $${DB_HOST}
          port: $${DB_PORT}
          sslmode: require
    lapi:
      enabled: true
      envFrom:
        - secretRef:
            name: crowdsec-console-creds
      env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: crowdsec-pg-pguser-crowdsec
              key: user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: crowdsec-pg-pguser-crowdsec
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: crowdsec-pg-pguser-crowdsec
              key: dbname
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: crowdsec-pg-pguser-crowdsec
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: crowdsec-pg-pguser-crowdsec
              key: port
      ingress:
        enabled: true
        ingressClassName: ingress-external-traefik
        host: crowdsec.${CLUSTER_DOMAIN}
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
      persistentVolume:
        data:
          storageClassName: freenas-api-iscsi-csi
        config:
          storageClassName: freenas-api-iscsi-csi
      metrics:
        serviceMonitor:
          enabled: true
          additionalLabels:
            release: prometheus
    agent:
      enabled: true
      isDeployment: true
      additionalAcquisition:
        - source: loki
          url: http://loki-gateway.loki.svc.cluster.local
          query: |
            {job="mailserver/mailserver", container="docker-mailserver"}
          labels:
            type: syslog
        - source: loki
          url: http://loki-gateway.loki.svc.cluster.local
          query: |
            {job="gitea/gitea"}
          labels:
            type: gitea
        - source: loki
          url: http://loki-gateway.loki.svc.cluster.local
          query: |
            {job="authentik/authentik", container="server"}
          labels:
            type: authentik
        - source: loki
          url: http://loki-gateway.loki.svc.cluster.local
          query: |
            {job="immich/server"}
          labels:
            type: immich
      env:
        - name: COLLECTIONS
          value: "crowdsecurity/traefik crowdsecurity/postfix crowdsecurity/dovecot LePresidente/gitea firix/authentik gauth-fr/immich"
      metrics:
        serviceMonitor:
          enabled: true
          additionalLabels:
            release: prometheus
    appsec:
      enabled: true
      env:
        - name: COLLECTIONS
          value: "crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules"
      acquisitions:
        - source: appsec
          listen_addr: 0.0.0.0:7422
          appsec_config: crowdsecurity/appsec-default
          labels:
            type: appsec
      metrics:
        serviceMonitor:
          enabled: true
          additionalLabels:
            release: prometheus
