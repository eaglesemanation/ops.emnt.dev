apiVersion: apps/v1
kind: Deployment
metadata:
  name: headscale
  namespace: headscale
  labels:
    app.kubernetes.io/name: headscale
    app.kubernetes.io/instance: headscale
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: headscale
      app.kubernetes.io/instance: headscale
  template:
    metadata:
      labels:
        app.kubernetes.io/name: headscale
        app.kubernetes.io/instance: headscale
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: headscale
          image: ghcr.io/juanfont/headscale:v0.25.1
          args: ["serve"]
          resources:
            requests:
              cpu: 10m
              memory: 64Mi
            limits:
              memory: 256Mi
          startupProbe:
            httpGet:
              path: /health
              port: web
          livenessProbe:
            httpGet:
              path: /health
              port: web
          readinessProbe:
            httpGet:
              path: /health
              port: web
          securityContext:
            readOnlyRootFilesystem: true
          ports:
            - name: web
              containerPort: 8080
            - name: metrics
              containerPort: 9090
            - name: grpc
              containerPort: 50443
            - name: stun
              protocol: UDP
              containerPort: 3478
          volumeMounts:
            - name: config
              mountPath: /etc/headscale
            - name: data
              mountPath: /var/lib/headscale
            - name: run-path
              mountPath: /var/run/headscale
            - name: secrets
              readOnly: true
              mountPath: /etc/headscale-secrets
      volumes:
        - name: config
          configMap:
            name: headscale-config
        - name: data
          persistentVolumeClaim:
            claimName: headscale-data
        - name: secrets
          secret:
            secretName: headscale
        - name: run-path
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: headscale-ui
  namespace: headscale
  labels:
    app.kubernetes.io/name: headscale-ui
    app.kubernetes.io/instance: headscale-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: headscale-ui
      app.kubernetes.io/instance: headscale-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: headscale-ui
        app.kubernetes.io/instance: headscale-ui
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      containers:
        - name: headscale-ui
          image: ghcr.io/gurucomputing/headscale-ui:2025.01.20
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              memory: 128Mi
          securityContext:
            readOnlyRootFilesystem: true
          ports:
            - name: web
              containerPort: 80
          volumeMounts:
            - name: data
              mountPath: /data
            - name: home-local
              mountPath: /home/appuser/.local
      volumes:
        - name: data
          emptyDir: {}
        - name: home-local
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale-exit-node
  namespace: headscale
  labels:
    app.kubernetes.io/name: tailscale
    app.kubernetes.io/instance: tailscale-exit-node
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tailscale
      app.kubernetes.io/instance: tailscale-exit-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tailscale
        app.kubernetes.io/instance: tailscale-exit-node
    spec:
      serviceAccountName: tailscale-exit-node
      containers:
        - name: tailscale
          image: ghcr.io/tailscale/tailscale:v1.82.0
          env:
            - name: TS_USERSPACE
              value: "true"
            - name: TS_ROUTES
              value: "${LOCAL_CIDR}"
            - name: TS_EXTRA_ARGS
              value: "--advertise-tags=tag:exit-node --advertise-exit-node --login-server=https://headscale.${CLUSTER_DOMAIN}"
            - name: TS_KUBE_SECRET
              value: tailscale-exit-node-state
            - name: TS_HOSTNAME
              value: "emnt-k8s"
          envFrom:
            - secretRef:
                name: tailscale-exit-node
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          resources:
            limits:
              squat.ai/tun: 1
