apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailserver
  namespace: mailserver
  labels:
    app.kubernetes.io/name: mailserver
    app.kubernetes.io/instance: mailserver
  annotations:
    ignore-check.kube-linter.io/run-as-non-root: >-
      'mailserver' needs to run as root
    ignore-check.kube-linter.io/privileged-ports: >-
      'mailserver' needs privilegdes ports
    ignore-check.kube-linter.io/no-read-only-root-fs: >-
      There are too many files written to make The root FS read-only
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mailserver
      app.kubernetes.io/instance: mailserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mailserver
        app.kubernetes.io/instance: mailserver
    spec:
      hostname: mail
      containers:
        - name: mailserver
          image: ghcr.io/docker-mailserver/docker-mailserver:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false
            privileged: false
            capabilities:
              add:
                # file permission capabilities
                - CHOWN
                - FOWNER
                - MKNOD
                - SETGID
                - SETUID
                - DAC_OVERRIDE
                # network capabilities
                - NET_ADMIN # needed for F2B
                - NET_RAW # needed for F2B
                - NET_BIND_SERVICE
                # miscellaneous  capabilities
                - SYS_CHROOT
                - KILL
              drop: [ALL]
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              memory: 4Gi
              cpu: 1500m
            requests:
              memory: 2Gi
              cpu: 600m
          volumeMounts:
            - name: data
              mountPath: /var/mail
              subPath: data
              readOnly: false
            - name: data
              mountPath: /var/mail-state
              subPath: state
              readOnly: false
            - name: data
              mountPath: /var/log/mail
              subPath: log
              readOnly: false
            - name: config
              subPath: postfix-main.cf
              mountPath: /tmp/docker-mailserver/postfix-main.cf
              readOnly: true
            - name: config
              subPath: postfix-master.cf
              mountPath: /tmp/docker-mailserver/postfix-master.cf
              readOnly: true
            - name: config
              subPath: dovecot.cf
              mountPath: /tmp/docker-mailserver/dovecot.cf
              readOnly: true
            - name: config
              subPath: dkim-signing.conf
              mountPath: /etc/rspamd/local.d/dkim-signing.conf
              readOnly: true
            - name: secrets
              subPath: emnt.dev.rsa.private
              mountPath: /tmp/docker-mailserver/rspamd/keys/emnt.dev.rsa.private
              readOnly: true
            - name: secrets
              subPath: emnt.dev.ed25519.private
              mountPath: /tmp/docker-mailserver/rspamd/keys/emnt.dev.ed25519.private
              readOnly: true
            - name: secrets
              subPath: postfix-accounts.cf
              mountPath: /tmp/docker-mailserver/postfix-accounts.cf
              readOnly: true
            - name: secrets
              subPath: postfix-virtual.cf
              mountPath: /tmp/docker-mailserver/postfix-virtual.cf
              readOnly: true
            - name: certificates-rsa
              mountPath: /secrets/ssl/rsa/
              readOnly: true
            - name: tmp-files
              mountPath: /tmp
              readOnly: false
          ports:
            - name: transfer
              containerPort: 25
              protocol: TCP
            - name: esmtp-implicit
              containerPort: 465
              protocol: TCP
            - name: esmtp-explicit
              containerPort: 587
            - name: imap-implicit
              containerPort: 993
              protocol: TCP
          envFrom:
            - configMapRef:
                name: env-mailserver
        - name: wireguard-tunnel
          image: alpine:3.17.3
          env:
            - name: GATEWAY_IP
              value: "${GATEWAY_ADDR}"
          volumeMounts:
            - name: wireguard-config
              mountPath: /etc/wireguard
            - name: wireguard-entrypoint
              mountPath: /usr/bin/wireguard-entrypoint.sh
              subPath: wireguard-entrypoint.sh
          command: [/usr/bin/wireguard-entrypoint.sh]
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
      restartPolicy: Always
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data-mailserver
        - name: config
          configMap:
            name: config-mailserver
        - name: secrets
          secret:
            secretName: secrets-mailserver
        - name: certificates-rsa
          secret:
            secretName: wildcard-cert
            items:
              - key: tls.key
                path: tls.key
              - key: tls.crt
                path: tls.crt
        - name: tmp-files
          emptyDir: {}
        - name: wireguard-config
          secret:
            secretName: wireguard-config
        - name: wireguard-entrypoing
          configMap:
            name: wireguard-entrypoint
            items:
              - key: wireguard-entrypoint.sh
                path: wireguard-entrypoint.sh
                mode: 0755
